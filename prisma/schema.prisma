generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  USER
  ADMIN
  SERVICE_PROVIDER
  STUDENT
}

model User {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role         UserRole       @default(USER)
  password      String
  accounts      Account[]
  sessions      Session[]
  isVerfied     Boolean @default(false)
  token         Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String    @unique
  imageUrl    String?
  description String?
  tours    Tour[]
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
}

model Attraction {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String    @unique
  imageUrl    String?
  description String?
  tourIds     String[]
  location    String?
  history     String?
  thingsToKnow  String[]
  how  String?
  when  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
}

model Faq {
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  qn String
  ans  String
  tourId  String @db.ObjectId
  tour      Tour @relation(fields: [tourId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
}

model Day {
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description  String
  tourId  String @db.ObjectId
  tour      Tour @relation(fields: [tourId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accommodation String[]
  meals String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
}

model Tour {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  slug          String   @unique
  imageUrl      String?
  imageUrls String[]
  description   String?
  pickupStation   String?
  pricePerAdult Int?
  pricePerChild Int?
  stepCount Int?
  whatsIncluded String[]
  additionalInfo String[]
  travelerPhotos String[]
  cancellationPolicy String?
  departureAndReturn String?
  categoryId    String   @db.ObjectId
  category      Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  book    Book[]
  faqs    Faq[]
  days    Day[]
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String
  phone         String
  adults        String
  requirements  String?
  children      String
  tourId  String @db.ObjectId
  tour      Tour @relation(fields: [tourId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  date          DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
} 

model Destination {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String    @unique
  imageUrl    String?
  description String?
  tourIds     String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String    @unique
  thumbnail   String
  description String
  content     String
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
}